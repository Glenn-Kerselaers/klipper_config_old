
###################################################################
# Script Name	 : "MACROS.CFG"                                                                                         
# Description	 : Macro definitions
# Args           :                                                                                           
# Author       	 : Glenn Kerselaers                                             
# Date           : "07 April 2021"                                   
###################################################################

######################################################################
# Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# PRINT_START and PRINT_END.

[gcode_macro PRINT_START T_BED T_EXTRUDER Z_OFFSET]
default_parameter_T_BED: 60
default_parameter_T_EXTRUDER: 190
default_parameter_Z_OFFSET: 0.0
gcode:
    REPORT INFO="Homing."
    G90                                 ; Absolute
    SET_GCODE_OFFSET Z={Z_OFFSET|float} ; Reset the G-Code Z offset (adjust Z offset if needed)
    G28                                 ; Home
    LOAD_MESH_TEMP BED_TEMPERATURE={T_BED}       ; Load bed mesh
    PARK                   				; Park

    REPORT INFO="Heating."
    M140 S{T_BED}                       ; Heat bed
	M190 S{T_BED}                       ; Heat bed & wait
    M109 S{T_EXTRUDER}                  ; Heat extruder & wait
    PRIME_LINE                          ; Print prime line
    REPORT INFO="Printing."

[gcode_macro PRINT_END]
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    PARK            			   ; park
	M84                 ; Disable steppers
    SAVE_CONFIG

# prime the nozzle 
[gcode_macro PRIME_LINE]
gcode: 
    REPORT INFO="Prime Line"
    G92 E0                          ;Reset Extruder
    G1 Z2.0 F3000                   ;Move Z Axis up
    G1 X20 Y30 Z0.28 F5000.0         ;Move to start position
    G1 X20 Y200.0 Z0.28 F1500.0  ;Draw the first line
    G1 X22 Y200.0 Z0.28 F5000.0      ;Move to side a little
    G1 X22 Y50 Z0.28 F1500.0 E30     ;Draw the second line
    G92 E0                          ;Reset Extruder
    G1 Z2.0 F3000                   ;Move Z Axis up

########################################
# Calibration
########################################

# G29 that does (1) home all (2) get bed mesh (3) move nozzle to corner so it doesnt ooze on the bed while heating up.
[gcode_macro G29]
gcode:
    REPORT INFO="BED MESH GENERATE"
    G28                             ; Home
    BED_MESH_CALIBRATE              ; Calibrate bed mesh
    G0 X0 Y0 Z10 F6000              ; Move to 0
    BED_MESH_PROFILE save=default   ; Save bed_mesh profile

[gcode_macro LOAD_MESH_TEMP]
default_parameter_BED_TEMPERATURE: 0
default_parameter_FORCE: 0
gcode:
  {action_respond_info("- AUTOMATED BED MESH GENERATOR -")}
  {% if BED_TEMPERATURE|int < 30 %}
    {action_respond_info("Your bed temp is to low, make sure it is at least 30 or higher")}
  {% else %}
    {% if printer.configfile.config["bed_mesh " + BED_TEMPERATURE] is defined and FORCE|int == 0 %}
      G28
      BED_MESH_PROFILE LOAD={BED_TEMPERATURE}
      {action_respond_info("Succesfully loaded bed_mesh "+ BED_TEMPERATURE)}
    {% else %}
      {% if printer.configfile.config["bed_mesh " + BED_TEMPERATURE] is defined and FORCE|int == 1 %}
        BED_MESH_PROFILE REMOVE={BED_TEMPERATURE}
      {% endif %}
      {action_respond_info("bed_mesh not defined, your bed temperature will go up!")}
      {action_respond_info("We will probe the bed and save the mesh as bed_mesh "+ BED_TEMPERATURE)}
      ADD_BED_MESH TARGET_TEMP={BED_TEMPERATURE}
    {% endif %}
  {% endif %}

[gcode_macro ADD_BED_MESH]
default_parameter_TARGET_TEMP: 30
gcode:
  M190 S{TARGET_TEMP}
  G28
  BED_MESH_CALIBRATE
  BED_MESH_PROFILE SAVE={TARGET_TEMP}
  
########################################
# Printer operations
########################################

#[gcode_macro PAUSE]
#rename_existing: BASE_PAUSE
#default_parameter_X: 250                ; x park position
#default_parameter_Y: 250                ; y park position
#default_parameter_Z: 10                 ; z park position
#default_parameter_E: 1                  ; e park position (retract)
#gcode:
#    REPORT INFO="Pause" 
#
#    SAVE_GCODE_STATE NAME=PAUSE_state
#    BASE_PAUSE                          ; Pause
#    PARK                                ; Park

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    REPORT INFO="Pause" 
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
	
# Park toolhead
[gcode_macro PARK]
default_parameter_X: 250                ; x park position
default_parameter_Y: 250                ; y park position
default_parameter_Z: 10                 ; z park position
default_parameter_E: 1                  ; e park position (retract)
gcode:
    SAVE_GCODE_STATE NAME=parking
    REPORT INFO="Park" 
    G91                                 ; Relative
    G1 E-{E} F2100                      ; Retract
    G1 Z10 F600                         ; Move to Z 
    G90                                 ; Absolute
    G1 X{X} Y{Y} F6000                  ; Move to X, Y
    RESTORE_GCODE_STATE NAME=parking
	
[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    REPORT INFO="Resuming"
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### end of definitions #####
    G91
    G1 E{E} F2100
    RESTORE_GCODE_STATE NAME=PAUSE_state
    BASE_RESUME
	
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    END_PRINT           ; End the print sequence.
    TURN_OFF_HEATERS    ; Turn off the heaters :) 
    CLEAR_PAUSE         ; Clear all pauses
    SDCARD_RESET_FILE   ; Reset the file
    BASE_CANCEL_PRINT   ; Cancel print 

########################################
# Filament
########################################
    
# load filament
[gcode_macro FILAMENT_LOAD]
gcode:
    REPORT INFO="Loading..."
    SAVE_GCODE_STATE NAME=loading_filament
    M83
    G92 E0.0
    LOW_TEMP_CHECK
    G1 E420 F6000  # length of bowden tube till cold-end (~420mm) 
    G1 E100 F200  # some extra to prime the nozzle --> slower 
    G92 E0.0
    RESTORE_GCODE_STATE NAME=loading_filament

# unload filament
[gcode_macro FILAMENT_UNLOAD]
default_parameter_BOWDEN_LENGTH: 420
gcode:
    REPORT INFO="Unloading..."
    SAVE_GCODE_STATE NAME=filament_unload
    PAUSE                                       ; Pause
    LOW_TEMP_CHECK                              ; Verify extruder temperature, else heat
    G91                                         ; Relative
    G1 E10 F100                                 ; Extrude 10 Fast
    G92 E0.0                                    ; Reset extruder
    G1 E-{BOWDEN_LENGTH+100} F6000            ; Retract  the E is the length of the bowden tube (420mm) + 100 mm. 
    G92 E0.0                                    ; Reset extruder
    RESTORE_GCODE_STATE NAME=filament_unload    ; Restore state prior to unloading

# filament change 
[gcode_macro FILAMENT_SWITCH]
gcode:
    REPORT INFO="Filament switch"
    SAVE_GCODE_STATE NAME=filament_change
    PAUSE

    FILAMENT_UNLOAD

    REPORT INFO="New filament"
    COUNTDOWN TIME=25 MSG="Switch"
    
    FILAMENT_LOAD

    COUNTDOWN TIME=10 MSG="Clean"
    RESUME
    REPORT INFO="New filament"
    RESTORE_GCODE_STATE NAME=filament_change
    REPORT INFO="Printing..."

########################################
# Utility
########################################

[gcode_macro COUNTDOWN]
default_parameter_MSG: "Time: "
default_parameter_TIME: 10
gcode: 
    # countdown 
    {% for s in range(TIME|int, 0, -1) %}
        # dwell 1 second
        G4 P1000
        # echo
        M117 {params.MSG} {s}s
        M118 {params.MSG} {s}s
    {% endfor %}

# LOW_TEMP_CHECK checks if there is a setpoint for the  extruder. Untested! 
# - If this setpoint is reached, continue. 
# - If not, heat to setpoint.
# - If no setpoint, heat to parameter T (default@200)
[gcode_macro LOW_TEMP_CHECK T]
default_parameter_T: 230
gcode: 
    {% if printer.extruder.target != 0 %} # if there is a setpoint for extruder
        {% if printer.extruder.temperature < printer.extruder.target %} # if not reached, heat
            M118 Heating from {printer.extruder.temperature} to {printer.extruder.target}.
            M109 S{printer.extruder.target|float} 
        {% endif %}
    {% else %} # if no setpoint for extruder
        {% if printer.extruder.target < T %}  # heat to T.
            M118 No setpoint, heating to {T}.
            M109 S{T}
        {% endif %}
    {% endif %}

[gcode_macro REPORT INFO]
default_parameter_INFO: ""
gcode:
    M117 {INFO}
    M118 {INFO}

[gcode_macro SAVE_AT_END]
variable_save: 0
gcode:
    SET_GCODE_VARIABLE MACRO=SAVE_AT_END VARIABLE=save VALUE=1

[gcode_macro SAVE_IF_SET]
gcode:
    {% if printer["gcode_macro SAVE_AT_END"].save == 1 %}
    {printer.gcode.action_respond_info("Saving was requested - saving and restarting now")}
    SAVE_CONFIG
    {% endif %}
    
[gcode_macro DUMP_PARAMETERS]
gcode:
  {% set parameters = namespace(output = '') %}
  {% for name1 in printer %}
    {% for name2 in printer[name1] %}
      {% set donotwant = ['bed_mesh','configfile'] %}
      {% if name1 is not in donotwant %}
        {% set param = "printer['%s'].%s = %s" % (name1, name2, printer[name1][name2]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
      {% endif %}
      {% else %}
        {% set param = "printer['%s'] = %s" % (name1, printer[name1]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
    {% endfor %}
  {% endfor %}
  {action_respond_info(parameters.output)}